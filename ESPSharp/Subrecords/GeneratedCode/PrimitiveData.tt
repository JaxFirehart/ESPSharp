
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "PrimitiveData";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(float),
			"XBound",
			"Bounds/X"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"YBound",
			"Bounds/Y"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"ZBound",
			"Bounds/Z"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Red",
			"Color/Red"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Green",
			"Color/Green"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Blue",
			"Color/Blue"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unknown",
			"Unknown"
			);
	tempField.byteCount = 4;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(PrimitiveType),
			"Type",
			"Type"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>