
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "ExplosionData";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(float),
			"Force",
			"Force"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Damage",
			"Damage"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Radius",
			"Radius"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(FormID),
			"Light",
			"Light"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(FormID),
			"Sound1",
			"Sound1"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(ExplosionFlags),
			"Flags",
			"Flags"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"ISRadius",
			"ISRadius"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(FormID),
			"ImpactDataSet",
			"ImpactDataSet"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(FormID),
			"Sound2",
			"Sound2"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"RadiationLevel",
			"Radiation/Level"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"RadiationDissipationTime",
			"Radiation/DissipationTime"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"RadiationRadius",
			"Radiation/Radius"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(SoundLevel),
			"SoundLevel",
			"SoundLevel"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>