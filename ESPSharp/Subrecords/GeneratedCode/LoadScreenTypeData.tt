
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "LoadScreenTypeData";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(LoadScreenTypeEnum),
			"Type",
			"Type"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(uint),
			"X",
			"X"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(uint),
			"Y",
			"Y"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(uint),
			"Width",
			"Width"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(uint),
			"Height",
			"Height"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Orientation",
			"Orientation"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(FontType),
			"Font1",
			"Font1/Font"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Font1Red",
			"Font1/Color/Red"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Font1Green",
			"Font1/Color/Green"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Font1Blue",
			"Font1/Color/Blue"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(FontAlignment),
			"Font1Alignment",
			"Font1/Alignment"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unknown1",
			"Unknown1"
			);
    tempField.byteCount = 20;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(FontType),
			"Font2",
			"Font2/Font"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Font2Red",
			"Font2/Color/Red"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Font2Green",
			"Font2/Color/Green"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Font2Blue",
			"Font2/Color/Blue"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unknown2",
			"Unknown2"
			);
    tempField.byteCount = 4;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(uint),
			"Stats",
			"Stats"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>