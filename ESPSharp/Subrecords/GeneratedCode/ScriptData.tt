
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "ScriptData";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unused",
			"Unused"
			);
	tempField.byteCount = 4;
	tempField.implementReadXML = false;
	tempField.implementWriteXML = false;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(uint),
			"ReferenceCount",
			"ReferenceCount"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(uint),
			"CompiledSize",
			"CompiledSize"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(uint),
			"VariableCount",
			"VariableCount"
			);
	template.Fields.Add(tempField);
	tempField = 
		new ClassField(
			typeof(ScriptType),
			"Type",
			"Type"
			);
	template.Fields.Add(tempField);
	tempField = 
		new ClassField(
			typeof(ScriptFlags),
			"Flags",
			"Flags"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>