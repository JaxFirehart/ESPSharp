
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "AIData";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(AggressionType),
			"Aggression",
			"Aggression"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(ConfidenceType),
			"Confidence",
			"Confidence"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"EnergyLevel",
			"EnergyLevel"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"Responsibility",
			"Responsibility"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(MoodType),
			"Mood",
			"Mood"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unused",
			"Unused"
			);
	tempField.byteCount = 3;
	tempField.implementReadXML = false;
	tempField.implementWriteXML = false;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(ServicesFlag),
			"Services",
			"Services"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(Skills),
			"Teaches",
			"Teaches"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"MaxTrainingLevel",
			"MaxTrainingLevel"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(AssistanceType),
			"Assistance",
			"Assistance"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(AggroRadiusBehaviorFlags),
			"AggroRadiusBehavior",
			"AggroRadiusBehavior"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(int),
			"AggroRadius",
			"AggroRadius"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>