<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#	
	SubrecordTemplate template = new SubrecordTemplate();
	template.ClassName = "DecalData";

	SubrecordField tempField;

	tempField = 
		new SubrecordField(
			typeof(float),
			"MinWidth",
			@"Width/Min"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(float),
			"MaxWidth",
			@"Width/Max"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(float),
			"MinHeight",
			@"Height/Min"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(float),
			"MaxHeight",
			@"Height/Max"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(float),
			"Depth",
			@"Depth"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(float),
			"Shininess",
			@"Shininess"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(float),
			"ParallaxScale",
			@"Parallax/Scale"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(byte),
			"ParallaxPasses",
			@"Parallax/Passes"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(DecalDataFlags),
			"DecalFlags",
			@"Flags"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(byte[]),
			"Unused",
			@"Unused"
			);
	tempField.byteCount = 2;
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordField(
			typeof(Color),
			"Color",
			@"Color"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>