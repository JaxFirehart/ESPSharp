
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "DecalData";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(float),
			"MinWidth",
			"Width/Min"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"MaxWidth",
			"Width/Max"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"MinHeight",
			"Height/Min"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"MaxHeight",
			"Height/Max"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Depth",
			"Depth"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"Shininess",
			"Shininess"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"ParallaxScale",
			"Parallax/Scale"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"ParallaxPasses",
			"Parallax/Passes"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(DecalDataFlags),
			"DecalFlags",
			"Flags"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unused",
			"Unused"
			);
	tempField.byteCount = 2;
	tempField.implementReadXML = false;
	tempField.implementWriteXML = false;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(Color),
			"Color",
			"Color"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>