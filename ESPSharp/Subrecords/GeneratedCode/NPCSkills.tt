
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "NPCSkills";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(byte),
			"BarterValue",
			"Barter/Value"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"BigGunsValue",
			"BigGuns/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"EnergyWeaponsValue",
			"EnergyWeapons/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"ExplosivesValue",
			"Explosives/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"LockpickValue",
			"Lockpick/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"MedicineValue",
			"Medicine/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"MeleeWeaponsValue",
			"MeleeWeapons/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"RepairValue",
			"Repair/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"ScienceValue",
			"Science/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"GunsValue",
			"Guns/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"SneakValue",
			"Sneak/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"SpeechValue",
			"Speech/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"SurvivalValue",
			"Survival/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"UnarmedValue",
			"Unarmed/Value"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"BarterOffset",
			"Barter/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"BigGunsOffset",
			"BigGuns/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"EnergyWeaponsOffset",
			"EnergyWeapons/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"ExplosivesOffset",
			"Explosives/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"LockpickOffset",
			"Lockpick/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"MedicineOffset",
			"Medicine/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"MeleeWeaponsOffset",
			"MeleeWeapons/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"RepairOffset",
			"Repair/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"ScienceOffset",
			"Science/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"GunsOffset",
			"Guns/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"SneakOffset",
			"Sneak/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"SpeechOffset",
			"Speech/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"SurvivalOffset",
			"Survival/Offset"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"UnarmedOffset",
			"Unarmed/Offset"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>