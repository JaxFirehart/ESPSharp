
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "LightingTemplateData";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(Color),
			"ColorAmbient",
			"Color/Ambient"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(Color),
			"ColorDirectional",
			"Color/Directional"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(Color),
			"FogColor",
			"Fog/Color"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"FogNear",
			"Fog/Near"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"FogFar",
			"Fog/Far"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(int),
			"DirectionalRotationXY",
			"DirectionalRotation/XY"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(int),
			"DirectionalRotationZ",
			"DirectionalRotation/Z"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"DirectionalFade",
			"DirectionalFade"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"FogClipDistance",
			"Fog/ClipDistance"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(float),
			"FogPower",
			"Fog/Power"
			);
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>