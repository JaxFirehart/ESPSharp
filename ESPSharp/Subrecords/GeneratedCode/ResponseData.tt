
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "ResponseData";

	ClassField tempField;

	tempField = 
		new ClassField(
			typeof(EmotionType),
			"Emotion",
			"Emotion"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(int),
			"EmotionValue",
			"EmotionValue"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unused1",
			"Unused1"
			);
	tempField.byteCount = 4;
	tempField.implementReadXML = false;
	tempField.implementWriteXML = false;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte),
			"ResponseNumber",
			"ResponseNumber"
			);
	template.hashKey = tempField;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unused2",
			"Unused2"
			);
	tempField.byteCount = 3;
	tempField.implementReadXML = false;
	tempField.implementWriteXML = false;
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(FormID),
			"Sound",
			"Sound"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(NoYesByte),
			"UseEmotionAnimation",
			"UseEmotionAnimation"
			);
	template.Fields.Add(tempField);

	tempField = 
		new ClassField(
			typeof(byte[]),
			"Unused3",
			"Unused3"
			);
	tempField.byteCount = 3;
	tempField.implementReadXML = false;
	tempField.implementWriteXML = false;
	template.Fields.Add(tempField);
#>
<#@ include file="SubrecordTemplate.t4" once="true" #>