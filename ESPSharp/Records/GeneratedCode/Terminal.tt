<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#	
	RecordTemplate template = new RecordTemplate();
	template.ClassName = "Terminal";

	RecordField tempField;

	tempField = 
		new RecordField(
			"EDID",
			typeof(SimpleSubrecord<string>),
			"EditorID",
			"EditorID"
			);
	tempField.isRequired = true;
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"OBND",
			typeof(ObjectBounds),
			"ObjectBounds",
			"ObjectBounds"
			);
	tempField.isRequired = true;
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"FULL",
			typeof(SimpleSubrecord<string>),
			"Name",
			"Name"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"MODL",
			typeof(Model),
			"Model",
			"Model"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"SCRI",
			typeof(RecordReference),
			"Script",
			"Script"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"DEST",
			typeof(Destructable),
			"Destructable",
			"Destructable"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"DESC",
			typeof(SimpleSubrecord<string>),
			"WelcomeText",
			"WelcomeText"
			);
	tempField.isRequired = true;
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"SNAM",
			typeof(RecordReference),
			"LoopingSound",
			"LoopingSound"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"PNAM",
			typeof(RecordReference),
			"Password",
			"Password"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"DNAM",
			typeof(TerminalData),
			"Data",
			"Data"
			);
	tempField.isRequired = true;
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"ITXT",
			typeof(List<TerminalMenu>),
			"Selections",
			"Selections"
			);
	template.Fields.Add(tempField);
	tempField.XMLSubNames = new List<string> {"Selection"};
#>
<#@ include file="RecordTemplate.t4" once="true" #>