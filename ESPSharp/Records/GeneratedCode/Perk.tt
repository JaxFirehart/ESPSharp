
<#@ output extension=".cs" #>
<#	
	ClassTemplate template = new ClassTemplate();
	template.ClassName = "Perk";

	RecordField tempField;

	tempField = 
		new RecordField(
			"EDID",
			typeof(SimpleSubrecord<string>),
			"EditorID",
			"EditorID"
			);
	tempField.isRequired = true;
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"FULL",
			typeof(SimpleSubrecord<string>),
			"Name",
			"Name"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"DESC",
			typeof(SimpleSubrecord<string>),
			"Description",
			"Description"
			);
	tempField.isRequired = true;
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"ICON",
			typeof(SimpleSubrecord<string>),
			"LargeIcon",
			"Icon/Large"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"MICO",
			typeof(SimpleSubrecord<string>),
			"SmallIcon",
			"Icon/Small"
			);
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"CTDA",
			typeof(List<Condition>),
			"Requirements",
			"Requirements"
			);
	tempField.XMLSubNames = new List<string> {"Requirement"};
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"DATA",
			typeof(PerkData),
			"Data",
			"Data"
			);
	tempField.isRequired = true;
	template.Fields.Add(tempField);

	tempField = 
		new RecordField(
			"PRKE",
			typeof(List<PerkEffect>),
			"Effects",
			"Effects"
			);
	tempField.isSorted = true;
	tempField.XMLSubNames = new List<string> {"Effect"};
	template.Fields.Add(tempField);
#>
<#@ include file="RecordTemplate.t4" once="true" #>