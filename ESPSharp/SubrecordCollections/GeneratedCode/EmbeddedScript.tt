<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#	
	SubrecordCollectionTemplate template = new SubrecordCollectionTemplate();
	template.ClassName = "EmbeddedScript";

	SubrecordCollectionField tempField;

	tempField = 
		new SubrecordCollectionField(
			"SCHR",
			typeof(ScriptData),
			"Data",
			"Data"
			);
	template.hashKey = tempField;
	tempField.isRequired = true;
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordCollectionField(
			"SCDA",
			typeof(SimpleSubrecord<byte[]>),
			"CompiledScript",
			"CompiledScript"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordCollectionField(
			"SCTX",
			typeof(SimpleSubrecord<char[]>),
			"ScriptSource",
			"ScriptSource"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordCollectionField(
			"SLSD",
			typeof(List<LocalVariable>),
			"LocalVariables",
			"LocalVariables"
			);
	tempField.XMLSubName = "Variable";
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordCollectionField(
			"DUMY",
			typeof(List<Subrecord>),
			"References",
			"References"
			);
	tempField.implementWriteData = false;
	tempField.implementWriteXML = false;
	tempField.implementReadData = false;
	tempField.implementReadXML = false;
	tempField.XMLSubName = "Reference";
	template.Fields.Add(tempField);	

	tempField = 
		new SubrecordCollectionField(
			"SCRV",
			null,
			"LocalReference",
			"LocalReference"
			);
	template.Fields.Add(tempField);

	tempField = 
		new SubrecordCollectionField(
			"SCRO",
			null,
			"GlobalReference",
			"GlobalReference"
			);
	template.Fields.Add(tempField);

#>
<#@ include file="SubrecordCollectionTemplate.t4" once="true" #>